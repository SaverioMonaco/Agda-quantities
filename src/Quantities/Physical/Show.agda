module Quantities.Physical.Show where

open import Quantities.Physical.Base
open import Data.Nat
open import Data.Rational renaming (show to deprecated-show)
open import Data.Bool
open import Data.Rational.Show using () renaming (show to ‚Ñöshow)
open import Data.Integer.Show using () renaming (show to ‚Ñ§show)
open import Data.String.Base using (String; _++_)
open import Quantities.Units.Composed.Show using () renaming (show to showùïås)

-- show function for the Physical Quantities type.
-- It prints the number either as a ‚Ñö (if the numerator is ‚â† 1)
-- or as a ‚Ñ§,
-- then it prints the dimension using the show function from
-- Quantities.Units.Composed.Show
show : (pq : PQ) ‚Üí String
show (conPQ number dimension) with denominator-is-one (number)
  where
    denominator-is-one : (q : ‚Ñö) ‚Üí Bool
    denominator-is-one q with (‚Ñïisone (‚Ñö.denominator‚Ñï q) )
      where
        ‚Ñïisone : (n : ‚Ñï) ‚Üí Bool
        ‚Ñïisone zero          = false
        ‚Ñïisone (suc zero)    = true
        ‚Ñïisone (suc (suc n)) = false
    ...| bool = bool
...| false = ‚Ñöshow number ++ "  [" ++ showùïås dimension ++ "]"
...| true  = ‚Ñ§show (‚Ñö.numerator number) ++ "  [" ++ showùïås dimension ++ "]"
